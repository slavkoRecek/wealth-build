type BankAccount {
    id: ID!
    name: String!
    iban: String!
    balance: Float
    transactions: [BankTransaction]!
}

type Query {
    getBankAccounts: [BankAccount]!
    getBankAccountByID (id: ID): BankAccount
    getBankAccountByIban(iban: String): BankAccount
}

type Mutation {
    createBankAccount(name: String, iban: String!): BankAccount
    addTransaction(accountId: ID, trancactionInput: TransactionInput): BankTransaction
}

type BankTransaction {
    id: ID
    bookingDate: LocalDateTime
    credit: Float
    debit: Float
    description: String
}

input TransactionInput {
    credit: Float
    debit: Float
    description: String
}

scalar LocalDateTime
